{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/profile.component.js","services/auth-header.js","services/user.service.js","services/product.service.js","components/home.component.js","components/board-moderator.component.js","components/board-admin.component.js","components/product-list.component.js","components/product.component.js","components/add-product.component.js","context/context.jsx","container/hook-component.jsx","services/upload.service.js","container/upload-component.jsx","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","vemail","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Profile","currentUser","getCurrentUser","substring","substr","id","roles","map","index","key","authHeader","user","get","headers","put","delete","title","Home","content","isLoaded","items","header","prop","sortable","filterable","UserService","getPublicContent","ProductDataService","getPublished","console","log","tableHeaders","tableBody","keyName","rowsPerPage","rowsPerPageOption","initialSort","isAscending","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","ProductList","useState","products","setProducts","currentProduct","setCurrentProduct","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","useEffect","retrieveProducts","getUser","catch","placeholder","onClick","findByTitle","arc","product","setActiveProduct","deleteUser","description","brand","published","to","Product","setCurrentArtilce","setMessage","match","params","handleInputChange","event","updatePublished","status","update","AddProduct","initialProductState","userId","setProduct","submitted","setSubmitterd","create","RootContext","createContext","Provider","GlobalProvider","Children","globalcounter","dispatch","action","Consumer","GlobalConsumer","count","document","file","onUploadProgress","formData","FormData","append","undefined","selectedFiles","setSelectedFiles","currentFile","setCurrentFile","progress","setProgress","fileInfos","setFileInfos","UploadService","aria-valuenow","aria-valuemin","aria-valuemax","width","files","Math","round","loaded","total","href","url","logOut","showAdminBoard","showModeratorBoard","includes","logout","createBrowserHistory","exact","path","component","Hooks","FileUpload","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1733b0bd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://esport-station-71297.herokuapp.com/api/auth/\";\n\nclass AuthService {\n\n    login(username, password){\n        return axios.post(API_URL+\"signin\",{\n            username,\n            password\n        }).then(response =>{\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n\n            return response.data;\n        });\n\n    }\n\n    logout(){\n        localStorage.removeItem(\"user\");\n    }\n\n    register(username, email, password){\n        return axios.post(API_URL+\"signup\",{\n            username,\n            email,\n            password\n        });\n    }\n\n    getCurrentUser(){\n        return JSON.parse(localStorage.getItem(\"user\"));\n    }\n}\n\nexport default new AuthService;","import React, { Component  } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This field is required !\n            </div>\n        );\n      \n    }      \n};\n\nexport default class Login extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.handleLogin =this.handleLogin.bind(this);\n        this.onChangeUsername =this.onChangeUsername.bind(this);\n        this.onChangePassword= this.onChangePassword.bind(this);\n        this.state = {\n            username : \"\",\n            password : \"\",\n            loading : false,\n            message : \"\"\n        }\n    }\n\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e){\n        e.preventDefault();\n\n        this.setState({\n            message : \"\",\n            loading : true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.username, this.state.password).then(\n                () => {\n                    this.props.history.push(\"/profile\");\n                    window.location.reload();\n                },\n                error => {\n                    const resMessage = (error.response && error.response.data  && error.response.data.message ) \n                    || error.message || error.toString();\n\n                    this.setState({\n                        loading :false,\n                        message :resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading :false\n            });\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img   src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile\" className=\"profile-img-card\" />\n\n                    <Form \n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c\n                        }}\n                    >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"username\" \n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Input type=\"password\" className=\"form-control\" name=\"password\" \n                             value={this.state.password}\n                             onChange={this.onChangePassword}\n                             validations={[required]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <button className=\"btn btn-outline-primary btn-block\"\n                          disabled={this.state.loading}\n                          >\n                              {this.state.loading && (\n                                  <span className=\"spinner-border spinner-border-sm\"></span>\n                              )}\n\n                                <spa>Login</spa>\n                          </button>\n                        </div>\n                            \n                            {this.state.message && (\n                                 <div className=\"form-group\">\n                                     <div className=\"alert alert-danger\" role=\"alert\">\n                                        {this.state.message}\n                                     </div>\n                                 </div>\n                              )}\n\n                        <CheckButton \n                        style={{display : \"none\"}}\n                        ref={c => {\n                            this.checkBtn = c\n                        }}\n                        />\n\n                    </Form>\n\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component  } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail}  from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This field is required !\n            </div>\n        );\n      \n    }      \n};\n\nconst vemail = value => {\n    if (!isEmail(value)) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This is not valid email !\n            </div>\n        );\n      \n    }      \n};\n\nconst vusername = value => {\n    if (value.length <3 || value.length >20 ) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This username must be between 3 and 20 characters.\n            </div>\n        );\n      \n    }      \n};\n\nconst vpassword = value => {\n    if (value.length <6 || value.length >40 ) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This password must be between 6 and 40 characters.\n            </div>\n        );\n      \n    }      \n};\n\nexport default class Register extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.handleRegister =this.handleRegister.bind(this);\n        this.onChangeUsername =this.onChangeUsername.bind(this);\n        this.onChangePassword= this.onChangePassword.bind(this);\n        this.onChangeEmail= this.onChangeEmail.bind(this);\n        \n        this.state = {\n            username : \"\",\n            password : \"\",\n            email : \"\",\n            successful : false,\n            message : \"\"\n        }\n    }\n\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e){\n        e.preventDefault();\n\n        this.setState({\n            message : \"\",\n            successful : true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(this.state.username,this.state.email, this.state.password)\n            .then(\n                response => {\n                   this.setState({\n                       message : response.data.message,\n                       successful : true\n                   });\n                   \n                },\n                error => {\n                    const resMessage = (error.response && error.response.data \n                        && error.response.data.message ) || error.message || error.toString();\n\n                    this.setState({\n                        successful :false,\n                        message :resMessage\n                    });\n                }\n            );\n      \n        }\n    }\n\n    render(){\n        return(\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img   src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile\" className=\"profile-img-card\" />\n\n                    <Form \n                        onSubmit={this.handleRegister}\n                        ref={c => {\n                            this.form = c\n                        }} >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"username\" \n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required ,vusername]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"email\" \n                            value={this.state.email}\n                            onChange={this.onChangeEmail}\n                            validations={[required ,vemail]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Input type=\"password\" className=\"form-control\" name=\"password\" \n                             value={this.state.password}\n                             onChange={this.onChangePassword}\n                             validations={[required,vpassword]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <button className=\"btn btn-outline-primary btn-block\">\n                              Sign Up\n                          </button>\n                        </div>\n                            \n                            {this.state.message && (\n                                 <div className=\"form-group\">\n                                     <div className={\n                                         this.state.successful\n                                         ?\"alert alert-success\"\n                                         :\"alert alert-danger\"\n                                     } role=\"alert\">\n                                        {this.state.message}\n                                     </div>\n                                 </div>\n                              )}\n\n                        <CheckButton \n                        style={{display : \"none\"}}\n                        ref={c => {\n                            this.checkBtn = c\n                        }}\n                        />\n\n                    </Form>\n\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component  } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\n\nexport default class Profile extends Component{\n\n    \n    constructor(props){\n        super(props);\n       \n        this.state = {\n            currentUser : AuthService.getCurrentUser()\n        }\n    }\n\n    render(){\n\n        const {currentUser} = this.state;\n        return(\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3><strong>{currentUser.username}</strong></h3>\n                </header>\n                <p>\n                    <strong>Token : </strong>{\" \"}\n                    {currentUser.accessToken.substring(0,20)}...{\" \"}\n                    {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n                </p>\n                <p>\n                    <strong> Id : </strong>\n                    {currentUser.id}\n                </p>\n                <p>\n                    <strong> Email : </strong>\n                    {currentUser.email}\n                </p>\n                <p>\n                    <strong> Authorities : </strong>\n                    <ul>\n                        {currentUser.roles &&\n                        currentUser.roles.map((role ,  index ) =><li key={index}>{role}</li>)\n                        }\n                    </ul>\n                </p>\n              \n            </div>\n        );\n    }\n}","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user && user.accessToken) {\n      //  return {Authorization:'Bearer '+ user.accessToken};\n        return {'x-access-token' : user.accessToken,\"Content-type\": \"application/json\", 'Accept': 'application/json'};\n\n    } else {\n        return {};\n    }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://esport-station-71297.herokuapp.com/api/test/';\n\nclass UserService {\n\n    getPublicContent(){\n        return axios.get(API_URL+\"all\");\n    }\n\n    getUserBoard(){\n        return axios.get(API_URL+\"user\", {headers : authHeader()});\n    }\n\n    getModeratorBoard(){\n        return axios.get(API_URL+\"mod\", {headers : authHeader()});\n    }\n\n    getAdminBoard(){\n        return axios.get(API_URL+\"admin\", {headers : authHeader()});\n    }\n}\n\nexport default new UserService;","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://esport-station-71297.herokuapp.com/api';\n\nclass ProductDataService {\n\n    getAll(){\n        return axios.get(API_URL+\"/product\" , {headers : authHeader()});\n    }\n\n    getPublished(){\n        return axios.get(API_URL+\"/product/published\" );\n    }\n\n    get(id){\n        return axios.get(`${API_URL}/product/${id}`, {headers : authHeader()});\n    }\n\n    getUser(id){\n        return axios.get(`${API_URL}/product/user/${id}`, {headers : authHeader()});\n    }\n\n    create(data){\n      //  console.log(axios.post(API_URL+\"/product\",data ,{headers : authHeader()}));\n        return axios.post(`${API_URL}/product`,data ,{headers : authHeader()});\n    }\n\n    update(id, data){\n        return axios.put(`${API_URL}/product/${id}`, data, {headers : authHeader()});\n    }\n\n    delete(id) {\n        //console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\n        return axios.delete(`${API_URL}/product/${id}`, {headers : authHeader()});\n    }\n\n    deleteUser(id) {\n        //console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\n        return axios.delete(`${API_URL}/product/user/${id}`, {headers : authHeader()});\n    }\n    \n    deleteAll() {\n        return axios.delete(`${API_URL}/product`, {headers : authHeader()});\n    }\n    \n    findByTitle(title) {\n        return axios.get(`${API_URL}/product?title=${title}`, {headers : authHeader()});\n    }\n}\n\nexport default new ProductDataService;","import React, { Component  } from \"react\";\nimport UserService from \"../services/user.service\";\nimport ProductDataService from \"../services/product.service\";\nimport Datatable from \"react-bs-datatable\"; \n\nexport default class Home extends Component{\n\n    \n    constructor(props){\n        super(props);\n       \n        this.state = {\n            content : \"\",\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n\n        this.header = [\n            { title: \"ID\", prop: \"id\", sortable: true, filterable: true },\n            {\n              title: \"User Name\",\n              prop:\"username\",\n              sortable: true,\n              filterable: true\n            },\n            { title: \"Merk\", prop: \"title\", sortable: true, filterable: true },\n            { title: \"Description\", prop: \"description\", sortable: true, filterable: true },\n            { title: \"Brand\", prop: \"brand\", sortable: true, filterable: true },\n            { title: \"Published Date\", prop: \"createdAt\", sortable: true, filterable: true }\n        ];\n    \n\n       \n    }\n\n    componentDidMount(){\n        UserService.getPublicContent().then(\n            response => {\n                this.setState({\n                    content : response.data\n                });\n            },\n            error => {\n                this.setState({\n                    content : (error.response && error.response.data ) \n                    || error.message || error.toString()\n                });\n            }\n        );\n\n        ProductDataService.getPublished().then(\n            response => {\n                this.setState({\n                    isLoaded: true,\n                    items: response.data\n                });\n            },\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                });\n            }\n        );\n    }\n\n\n    render(){\n        const { content, error, isLoaded, items } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n          } else if (!isLoaded) {\n            return <div>Loading...</div>;\n          } else {\n            console.log(items);\n\n        return(\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3><strong>{content.message}</strong></h3>\n                </header>\n\n                <Datatable\n                    tableHeaders={this.header}\n                    tableBody={items}\n                    keyName=\"userTable\"\n                   // tableClass=\"striped hover responsive\"\n                    rowsPerPage={20}\n                    rowsPerPageOption={[20, 25, 30, 40]}\n                    initialSort={{ prop: \"username\", isAscending: true }} />\n              \n              \n            </div>\n        );\n\n        }\n    }\n}","import React, { Component  } from \"react\";\nimport UserService from \"../services/user.service\";\n\n\nexport default class BoardModerator extends Component{\n\n    \n    constructor(props){\n        super(props);\n       \n        this.state = {\n            content : \"\"\n        }\n    }\n\n    componentDidMount(){\n        UserService.getModeratorBoard().then(\n            response => {\n                this.setState({\n                    content : response.data\n                });\n            },\n            error => {\n                this.setState({\n                    content : (error.response && error.response.data \n                        && error.data.message ) || error.message || error.toString()\n                });\n            }\n        );\n    }\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3><strong>{this.state.content.message}</strong></h3>\n                </header>\n              \n            </div>\n        );\n    }\n}","import React, { Component  } from \"react\";\nimport UserService from \"../services/user.service\";\n\n\nexport default class BoardAdmin extends Component{\n\n    \n    constructor(props){\n        super(props);\n       \n        this.state = {\n            content : \"\"\n        }\n    }\n\n    componentDidMount(){\n        UserService.getAdminBoard().then(\n            response => {\n                this.setState({\n                    content : response.data\n                });\n            },\n            error => {\n                this.setState({\n                    content : (error.response && error.response.data \n                        && error.data.message ) || error.message || error.toString()\n                });\n            }\n        );\n    }\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3><strong>{this.state.content.message}</strong></h3>\n                </header>\n              \n            </div>\n        );\n    }\n}","import React, { Component, useState, useEffect } from \"react\";\nimport ProductDataService from \"../services/product.service\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\n// export default class ProductList extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n//     this.retrieveProduct = this.retrieveProduct.bind(this);\n//     this.refreshList = this.refreshList.bind(this);\n//     this.setActiveProduct = this.setActiveProduct.bind(this);\n//     this.removeAllProduct = this.removeAllProduct.bind(this);\n//     this.searchTitle = this.searchTitle.bind(this);\n\n//     this.state = {\n//       product: [],\n//       currentProduct: null,\n//       currentIndex: -1,\n//       searchTitle: \"\"\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.retrieveProduct();\n//   }\n\n//   onChangeSearchTitle(e) {\n//     const searchTitle = e.target.value;\n\n//     this.setState({\n//       searchTitle: searchTitle\n//     });\n//   }\n\n//   retrieveProduct() {\n//     ProductDataService.getUser(AuthService.getCurrentUser().id)\n//       .then(response => {\n//         this.setState({\n//           product: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   refreshList() {\n//     this.retrieveProduct();\n//     this.setState({\n//       currentProduct: null,\n//       currentIndex: -1\n//     });\n//   }\n\n//   setActiveProduct(product, index) {\n//     this.setState({\n//       currentProduct: product,\n//       currentIndex: index\n//     });\n//   }\n\n//   removeAllProduct() {\n//     console.log(\"tets\");\n//     ProductDataService.deleteUser(AuthService.getCurrentUser().id)\n//       .then(response => {\n//         console.log(response.data);\n//         this.refreshList();\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   searchTitle() {\n//     ProductDataService.findByTitle(this.state.searchTitle)\n//       .then(response => {\n//         this.setState({\n//           product: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   render() {\n//     const { searchTitle, product, currentProduct, currentIndex } = this.state;\n\n//     return (\n//       <div className=\"list row\">\n//         <div className=\"col-md-8\">\n//           <div className=\"input-group mb-3\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Search by title\"\n//               value={searchTitle}\n//               onChange={this.onChangeSearchTitle}\n//             />\n//             <div className=\"input-group-append\">\n//               <button\n//                 className=\"btn btn-outline-secondary\"\n//                 type=\"button\"\n//                 onClick={this.searchTitle}\n//               >\n//                 Search\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-6\">\n//           <h4>Products List</h4>\n\n//           <ul className=\"list-group\">\n//             {product &&\n//               product.map((arc, index) => (\n//                 <li\n//                   className={\n//                     \"list-group-item \" +\n//                     (index === currentIndex ? \"active\" : \"\")\n//                   }\n//                   onClick={() => this.setActiveProduct(arc, index)}\n//                   key={index}\n//                 >\n//                   {arc.title}\n//                 </li>\n//               ))}\n//           </ul>\n\n//           <button className=\"m-3 btn btn-sm btn-danger\" onClick={this.removeAllProduct}>\n//             Remove All\n//           </button>\n//         </div>\n//         <div className=\"col-md-6\">\n//           {currentProduct ? (\n//             <div>\n//               <h4>Product</h4>\n//               <div>\n//                 <label>\n//                   <strong>Title:</strong>\n//                 </label>{\" \"}\n//                 {currentProduct.title}\n//               </div>\n//               <div>\n//                 <label>\n//                   <strong>Description:</strong>\n//                 </label>{\" \"}\n//                 {currentProduct.description}\n//               </div>\n//               <div>\n//                 <label>\n//                   <strong>Status:</strong>\n//                 </label>{\" \"}\n//                 {currentProduct.published ? \"Published\" : \"Pending\"}\n//               </div>\n\n//               <Link\n//                 to={\"/product/\" + currentProduct.id}\n//                 className=\"badge badge-warning\"\n//               >\n//                 Edit\n//               </Link>\n//             </div>\n//           ) : (\n//             <div>\n//               <br />\n//               <p>Please click on a Product...</p>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\nconst ProductList = () => {\n  const [products , setProducts] = useState([]);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [currentIndex, setCurrentIndex] =  useState(-1);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n\n  useEffect(() => {\n    retrieveProducts();\n  }, []);\n\n  const onChangeSearchTitle = e =>{\n      const searchTitle = e.target.value;\n      setSearchTitle(searchTitle);\n  };\n\n  const retrieveProducts = () => {\n    ProductDataService.getUser(AuthService.getCurrentUser().id)\n    .then( response => {\n      setProducts(response.data);\n      console.log(response.data);\n    }).catch( e=> {\n      console.log(e);\n    });\n \n  };\n\n  const refreshList = () => {\n    retrieveProducts();\n    setCurrentProduct(null);\n    setCurrentIndex(-1);\n  };\n\n\n  const setActiveProduct = (product, index) => {\n    setCurrentIndex(index);\n    setCurrentProduct(product);\n  };\n\n  const removeAllProduct = () => {\n    ProductDataService.deleteUser(AuthService.getCurrentUser().id)\n    .then(response => {\n      console.log(response.data);\n      refreshList();\n    })\n    .catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByTitle = () => {\n    ProductDataService.findByTitle(searchTitle)\n    .then( response => {\n      setProducts(response.data);\n      console.log(response.data);\n    })\n    .catch( e => {\n      console.log(e);\n    });\n \n  };\n\n\n\n  return ( \n<div className=\"list row\">\n    <div className=\"col-md-8\">\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search by title\"\n          value={searchTitle}\n          onChange={onChangeSearchTitle}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={findByTitle}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n    <div className=\"col-md-6\">\n      <h4>Products List</h4>\n\n      <ul className=\"list-group\">\n        {products &&\n          products.map((arc, index) => (\n            <li\n              className={\n                \"list-group-item \" +\n                (index === currentIndex ? \"active\" : \"\")\n              }\n              onClick={() => setActiveProduct(arc, index)}\n              key={index}\n            >\n              {arc.title}\n            </li>\n          ))}\n      </ul>\n\n      <button className=\"m-3 btn btn-sm btn-danger\" onClick={removeAllProduct}>\n        Remove All\n      </button>\n    </div>\n    <div className=\"col-md-6\">\n      {currentProduct ? (\n        <div>\n          <h4>Product</h4>\n          <div>\n            <label>\n              <strong>Title:</strong>\n            </label>{\" \"}\n            {currentProduct.title}\n          </div>\n          <div>\n            <label>\n              <strong>Description:</strong>\n            </label>{\" \"}\n            {currentProduct.description}\n          </div>\n          <div>\n            <label>\n              <strong>Brand:</strong>\n            </label>{\" \"}\n            {currentProduct.brand}\n          </div>\n          <div>\n            <label>\n              <strong>Status:</strong>\n            </label>{\" \"}\n            {currentProduct.published ? \"Published\" : \"Pending\"}\n          </div>\n\n          <Link\n            to={\"/product/\" + currentProduct.id}\n            className=\"badge badge-warning\"\n          >\n            Edit\n          </Link>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Product...</p>\n        </div>\n      )}\n    </div>\n</div>\n);\n\n};\n\n\nexport default ProductList;","import React, { Component, useEffect, useState } from \"react\";\nimport ProductDataService from \"../services/product.service\";\n\n// export default class Product extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.getProduct = this.getProduct.bind(this);\n//     this.updatePublished = this.updatePublished.bind(this);\n//     this.updateProduct = this.updateProduct.bind(this);\n//     this.deleteProduct = this.deleteProduct.bind(this);\n\n//     this.state = {\n//       currentProduct: {\n//         id: null,\n//         title: \"\",\n//         description: \"\",\n//         published: false\n//       },\n//       message: \"\"\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.getProduct(this.props.match.params.id);\n//   }\n\n//   onChangeTitle(e) {\n//     const title = e.target.value;\n\n//     this.setState(function(prevState) {\n//       return {\n//         currentProduct: {\n//           ...prevState.currentProduct,\n//           title: title\n//         }\n//       };\n//     });\n//   }\n\n//   onChangeDescription(e) {\n//     const description = e.target.value;\n    \n//     this.setState(prevState => ({\n//       currentProduct: {\n//         ...prevState.currentProduct,\n//         description: description\n//       }\n//     }));\n//   }\n\n//   getProduct(id) {\n//     console.log(id);\n//     ProductDataService.get(id)\n//       .then(response => {\n//         this.setState({\n//           currentProduct: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   updatePublished(status) {\n//     var data = {\n//       id: this.state.currentProduct.id,\n//       title: this.state.currentProduct.title,\n//       description: this.state.currentProduct.description,\n//       published: status\n//     };\n\n//     ProductDataService.update(this.state.currentProduct.id, data)\n//       .then(response => {\n//         this.setState(prevState => ({\n//           currentProduct: {\n//             ...prevState.currentProduct,\n//             published: status\n//           }\n//         }));\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   updateProduct() {\n//     ProductDataService.update(\n//       this.state.currentProduct.id,\n//       this.state.currentProduct\n//     )\n//       .then(response => {\n//         console.log(response.data);\n//         this.setState({\n//           message: \"The product was updated successfully!\"\n//         });\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   deleteProduct() {    \n//     ProductDataService.delete(this.state.currentProduct.id).then(response => {\n//         console.log(response);\n//         this.props.history.push('/product')\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   render() {\n//     const { currentProduct } = this.state;\n\n//     return (\n//       <div>\n//         {currentProduct ? (\n//           <div className=\"edit-form\">\n//             <h4>Product</h4>\n//             <form>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"title\">Title</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"title\"\n//                   value={currentProduct.title}\n//                   onChange={this.onChangeTitle}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"description\">Description</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"description\"\n//                   value={currentProduct.description}\n//                   onChange={this.onChangeDescription}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>\n//                   <strong>Status:</strong>\n//                 </label>\n//                 {currentProduct.published ? \"Published\" : \"Pending\"}\n//               </div>\n//             </form>\n\n//             {currentProduct.published ? (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(false)}\n//               >\n//                 UnPublish\n//               </button>\n//             ) : (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(true)}\n//               >\n//                 Publish\n//               </button>\n//             )}\n\n//             <button\n//               className=\"badge badge-danger mr-2\"\n//               onClick={this.deleteProduct}\n//             >\n//               Delete\n//             </button>\n\n//             <button\n//               type=\"submit\"\n//               className=\"badge badge-success\"\n//               onClick={this.updateProduct}\n//             >\n//               Update\n//             </button>\n//             <p>{this.state.message}</p>\n//           </div>\n//         ) : (\n//           <div>\n//             <br />\n//             <p>Please click on a Product...</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n\nconst Product = props => {\n const initialProductState = {\n    id :  null,\n    title : \"\",\n    description : \"\",\n    brand : \"\",\n    published :  false\n } ;\n\n const [currentProduct, setCurrentArtilce] = useState(initialProductState);\n const [message, setMessage] = useState(\"\");\n\n const getProduct = id => {\n  ProductDataService.get(id).then(\n    response => {\n      setCurrentArtilce(response.data);\n      console.log(response.data);\n    }).catch(\n      e => {\n        console.log(e);\n      }\n    ); \n; }\n\n\nuseEffect(()=>{\n    getProduct(props.match.params.id);\n}, [props.match.params.id]);\n\nconst handleInputChange =  event => {\n  const {name , value} =  event.target;\n  setCurrentArtilce({...currentProduct, [name] : value});\n};\n\nconst updatePublished = status => {\n  var data = {\n     id: currentProduct.id,\n      title: currentProduct.title,\n      description: currentProduct.description,\n      brand: currentProduct.brand,\n      published: status\n  };\n\n  ProductDataService.update(currentProduct.id, data)\n  .then(response => {\n    setCurrentArtilce({...currentProduct,published:status});\n    console.log(response.data);\n  })\n  .catch( e => {\n    console.log(e);\n  });\n}\n\nconst updateProduct = () => {\n  ProductDataService.update(currentProduct.id, currentProduct)\n  .then(response => {\n    console.log(response.data);\n    setMessage(\"The product was updated successfully!\");\n  })\n  .catch(e => {\n    console.log(e);\n  });\n};\n\nconst deleteProduct= () => {\n  ProductDataService.delete(currentProduct.id)\n  .then( response => {\n    console.log(response.data);\n    props.history.push(\"/product\");\n  })\n  .catch( e => {\n    console.log(e);\n  });\n};\n\nreturn(\n  <div>\n  {currentProduct ? (\n    <div className=\"edit-form\">\n      <h4>Product</h4>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Merk</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            value={currentProduct.title}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            value={currentProduct.description}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"brand\">Brand</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"brand\"\n            value={currentProduct.brand}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>\n            <strong>Status:</strong>\n          </label>\n          {currentProduct.published ? \"Published\" : \"Pending\"}\n        </div>\n      </form>\n\n      {currentProduct.published ? (\n        <button\n          className=\"badge badge-primary mr-2\"\n          onClick={() => updatePublished(false)}\n        >\n          UnPublish\n        </button>\n      ) : (\n        <button\n          className=\"badge badge-primary mr-2\"\n          onClick={() => updatePublished(true)}\n        >\n          Publish\n        </button>\n      )}\n\n      <button\n        className=\"badge badge-danger mr-2\"\n        onClick={deleteProduct}\n      >\n        Delete\n      </button>\n\n      <button\n        type=\"submit\"\n        className=\"badge badge-success\"\n        onClick={updateProduct}\n      >\n        Update\n      </button>\n      <p>{message}</p>\n    </div>\n  ) : (\n    <div>\n      <br />\n      <p>Please click on a Product...</p>\n    </div>\n  )}\n</div>\n);\n  }\nexport default Product;","import React, { Component, useState } from \"react\";\nimport ProductDataService from \"../services/product.service\";\nimport AuthService from \"../services/auth.service\";\n\n\n// export default class AddProduct extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.saveProduct = this.saveProduct.bind(this);\n//     this.newProduct = this.newProduct.bind(this);\n\n//     this.state = {\n//       id: null,\n//       title: \"\",\n//       description: \"\", \n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     };\n//   }\n\n//   onChangeTitle(e) {\n//     this.setState({\n//       title: e.target.value\n//     });\n//   }\n\n//   onChangeDescription(e) {\n//     this.setState({\n//       description: e.target.value\n//     });\n//   }\n\n//   saveProduct() {\n//     var data = {\n//       title: this.state.title,\n//       description: this.state.description,\n//       userId : this.state.userId\n//     };\n\n//     ProductDataService.create(data)\n//       .then(response => {\n//         this.setState({\n//           id: response.data.id,\n//           title: response.data.title,\n//           description: response.data.description,\n//           published: response.data.published,\n//           userId: response.data.userId,\n//           submitted: true\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   newProduct() {\n//     this.setState({\n//       id: null,\n//       title: \"\",\n//       description: \"\",\n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"submit-form\">\n//         {this.state.submitted ? (\n//           <div>\n//             <h4>You submitted successfully!</h4>\n//             <button className=\"btn btn-success\" onClick={this.newProduct}>\n//               Add\n//             </button>\n//           </div>\n//         ) : (\n//           <div>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"title\">Title</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"title\"\n//                 required\n//                 value={this.state.title}\n//                 onChange={this.onChangeTitle}\n//                 name=\"title\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"description\">Description</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"description\"\n//                 required\n//                 value={this.state.description}\n//                 onChange={this.onChangeDescription}\n//                 name=\"description\"\n//               />\n//             </div>\n\n//             <button onClick={this.saveProduct} className=\"btn btn-success\">\n//               Submit\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n\n// }\n\n\nconst AddProduct = () => {\n\n  const initialProductState = {\n    id: null,\n    title: \"\",\n    description: \"\", \n    brand: \"\",\n    published: false,\n    userId : AuthService.getCurrentUser().id,\n\n  };\n\n  const [product , setProduct]  = useState(initialProductState);\n  const [submitted , setSubmitterd] = useState(false);\n\n  const handleInputChange = event => {\n      const {name , value} = event.target;\n      setProduct({...product, [name] :  value});\n  };\n\n  const saveProduct = () => {\n    var data = {\n      title : product.title,\n      description : product.description,\n      brand : product.brand,\n      userId : AuthService.getCurrentUser().id,\n    };\n\n    ProductDataService.create(data).then(\n      response => {\n        setProduct({\n          id : response.data.id,\n          title : response.data.title,\n          description : response.data.description,\n          brand : response.data.brand,\n          published : response.data.published\n\n        });\n\n        setSubmitterd(true);\n        console.log(response.data);\n      }).catch( e => {\n        console.log(e);\n      });\n  };\n\n  const newProduct = () => {\n    setProduct(initialProductState);\n    setSubmitterd(false);\n\n  };\n\n  return(\n    <div className=\"submit-form\">\n    {submitted ? (\n      <div>\n        <h4>You submitted successfully!</h4>\n        <button className=\"btn btn-success\" onClick={newProduct}>\n          Add\n        </button>\n      </div>\n    ) : (\n      <div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Merk</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={product.title}\n            onChange={handleInputChange}\n            name=\"title\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            required\n            value={product.description}\n            onChange={handleInputChange}\n            name=\"description\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"brand\">Brand</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"brand\"\n            required\n            value={product.brand}\n            onChange={handleInputChange}\n            name=\"brand\"\n          />\n        </div>\n\n        <button onClick={saveProduct} className=\"btn btn-success\">\n          Submit\n        </button>\n      </div>\n    )}\n  </div>\n  );\n};\n\nexport default AddProduct;","import React ,{Component , createContext } from \"react\";\n\n\nexport const RootContext = createContext();\nconst Provider = RootContext.Provider;\n\n// provider\nconst GlobalProvider = (Children) =>{\n    return (\n        class ParentComponent extends Component {\n\n            state = {\n                globalcounter : 0\n            }\n\n            dispatch = (action) => {\n\n                if (action.type === \"ADD_COUNTER\") {\n                    return this.setState({\n                        globalcounter : this.state.globalcounter + 1\n                    });\n                }\n                if (action.type === \"SUB_COUNTER\") {\n                    return this.setState({\n                        globalcounter : this.state.globalcounter - 1\n                    });\n                }\n              \n            }\n\n            render(){\n                return (\n                    <Provider value={{\n                        state : this.state,\n                        dispatch : this.dispatch\n                    }}>\n                      <Children {...this.props}/>\n                    </Provider>\n                  \n                )\n            }\n        }\n       \n    )\n}\n\n\n\nexport default GlobalProvider;\n\n//consumer\nconst Consumer = RootContext.Consumer;\nexport const GlobalConsumer = (Children) =>{\n    return (\n        class ParentComponent extends Component{\n            render(){\n                return(\n                    <Consumer>\n                    {\n                        value => {\n                            return (\n                                <Children {...this.props} {...value}/>\n                            )\n                        }\n            \n                    }\n                    \n                </Consumer>\n                )\n            }\n        }\n        \n    )\n}","// import React, { Component } from \"react\";\nimport React, { Component ,useState, useEffect } from 'react';\n// import { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {GlobalConsumer} from \"../context/context\";\n\n// class Hooks extends Component {\n\n     \n//     constructor(props){\n//         super(props);\n       \n//         this.state = {\n//             count : 0 ,\n                // test : null\n//         }\n    \n        \n//     }\n\n//     componentDidMount(){\n//         document.title = `Title Change: ${this.state.count}`\n//     }\n   \n//     componentDidUpdate(){\n//         document.title = `Title Change: ${this.state.count}`\n//     }\n\n//     componentWillUnmount(){\n//         document.title = `React App `\n//     }\n\n//     onUpdate = () => {\n//         this.setState({\n//             count : this.state.count + 1\n//         });\n//     }\n\n\n//     render(){\n//         return(\n//             <div className=\"container\">\n//                 <p>Nilai saya saat ini adalah : {this.state.count} </p>\n//                 <button className=\"btn btn-primary\" onClick={this.onUpdate}>Update Nilai</button>\n//             </div>\n//         );\n\n//     }\n\n\n// }\n\nconst Hooks = (props) => {\n    const [count , setCount] =  useState(0);\n    // const [test , setTest] =  useState(nulll);\n\n    useEffect(() => {\n        document.title = `Title Change: ${count}`\n        return () => {\n            document.title = `React App`\n        }\n    });\n    \n    return(\n       \n                        <div className=\"container\">\n                            {console.log(props)}\n                                  <p>Nilai saya saat ini adalah : {props.state.globalcounter} </p>\n                            <button className=\"btn btn-primary\" onClick={()=> props.dispatch({type: \"ADD_COUNTER\"})}>Tambah</button>\n                            <button className=\"btn btn-primary\" onClick={()=> props.dispatch({type: \"SUB_COUNTER\"})}>Kurang</button>\n                         </div>\n                \n    );\n}\n\n// function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         setCountFromGlobal :  () => dispatch({type : \"ADD_COUNT\"}),\n//       //  setCountFromGlobal :  () => dispatch({addCount}),\n//     }\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(Hooks)\nexport default GlobalConsumer(Hooks)\n//export default Hooks\n\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://esport-station-71297.herokuapp.com/';\n\nconst upload = (file , onUploadProgress) => {\n    let formData = new FormData();\n\n    formData.append(\"file\", file);\n\n    return axios.post(API_URL+\"/upload\", formData, {headers : {\n        \"Content-Type\" : \"multipart/form-data\"\n    } ,onUploadProgress });\n};\n\nconst getFiles = () => {\n    return axios.get(API_URL+\"/files\");\n    \n};\n\n\nexport default {\n    upload,\n    getFiles\n};\n","import React , {useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/upload.service\";\nimport {RootContext} from \"../App\";\nimport {GlobalConsumer} from \"../context/context\";\n\nconst UploadFIles = (props) => {\n\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n    const [currentFile, setCurrentFile] = useState(undefined);\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [fileInfos, setFileInfos] = useState([]);\n\n    const selectFile = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n\n    useEffect(() => {\n        UploadService.getFiles().then((response) => {\n            setFileInfos(response.data)\n        });\n    }, []);\n\n    const upload = () => {\n        let currentFile = selectedFiles[0];\n\n        setProgress(0);\n        setCurrentFile(currentFile);\n\n        UploadService.upload(currentFile, (event) => {\n            setProgress(Math.round((100 * event.loaded) / event.total))\n        }).then( (response) => {\n            setMessage(response.data.message);\n            return UploadService.getFiles();\n        }).then( (files) => {\n            setFileInfos(files.data);\n        } )\n        .catch(() => {\n            setProgress(0);\n            setMessage(\"Couldt not upload the file\");\n            setCurrentFile(undefined);\n        });\n\n        setSelectedFiles(undefined);\n    };\n\n\n    return (\n\n                        <div>\n            {currentFile && (\n                <div className=\"progress\">\n                <div\n                    className=\"progress-bar progress-bar-info progress-bar-striped\"\n                    role=\"progressbar\"\n                    aria-valuenow={progress}\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    style={{ width: progress + \"%\" }}\n                >\n                    {progress}%\n                </div>\n                </div>\n            )}\n\n            <label className=\"btn btn-default\">\n                <input type=\"file\" onChange={selectFile} />\n            </label>\n\n            <button\n                className=\"btn btn-success\"\n                disabled={!selectedFiles}\n                onClick={upload}\n            >\n                Upload\n            </button>\n\n            <div className=\"alert alert-light\" role=\"alert\">\n                {message}\n            </div>\n\n            <div className=\"card\">\n                <div className=\"card-header\">List of Files</div>\n                <ul className=\"list-group list-group-flush\">\n                {fileInfos &&\n                    fileInfos.map((file, index) => (\n                    <li className=\"list-group-item\" key={index}>\n                        {console.log(file)}\n                        <a target=\"_blank\" href={file.url} >{file.name}</a>\n                    </li>\n                    ))}\n                </ul>\n            </div>\n\n            <hr />\n                    <h4>{props.state.globalcounter}</h4>\n            </div>\n                    \n                \n    );\n};\n// function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n\n// export default connect(mapStateToProps)(UploadFIles)\n//export default UploadFIles;\nexport default GlobalConsumer(UploadFIles);","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link  } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Profile from \"./components/profile.component\";\nimport Home from \"./components/home.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport ProductList from \"./components/product-list.component\";\nimport Product from \"./components/product.component\";\nimport AddProduct from \"./components/add-product.component\";\nimport Hooks from \"./container/hook-component\";\nimport FileUpload from \"./container/upload-component\";\nimport GlobalProvider from \"./context/context\";\n\nclass App extends Component{\n\n    constructor(props){\n        super(props);\n        this.logOut = this.logOut.bind(this);\n\n        this.state = {\n            showAdminBoard : false,\n            showModeratorBoard : false,\n            currentUser : undefined,\n         \n        }\n\n    }\n\n\n   \n    componentDidMount(){\n\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser : user,\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n            });\n        }\n\n    }\n\n    logOut(){\n        AuthService.logout();\n       window.location.href=\"/\";\n     //   window.location.reload(false);\n    }\n\n\n    \n    render(){\n\n        const {currentUser, showModeratorBoard, showAdminBoard} = this.state;\n\n        return(\n\n            <Router history={createBrowserHistory }>\n             \n                    <div>\n                        <nav className=\"navbar navbar-expand navbar-dark bg-info\">\n                            <Link to=\"/\" className=\"navbar-brand\">\n                            ESport.Station\n                            </Link>\n                            <div className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link to=\"/home\" className=\"nav-link\">\n                                        Home\n                                    </Link>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <Link to=\"/hook\" className=\"nav-link\">\n                                        Hooks\n                                    </Link>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <Link to=\"/upload\" className=\"nav-link\">\n                                        Upload\n                                    </Link>\n                                </li>\n\n\n                                {showAdminBoard && (\n                                    <li className=\"nav-item\">\n                                    <Link to=\"/admin\" className=\"nav-link\">\n                                        Admin Board\n                                    </Link>\n                                </li>\n                                )}\n\n\n                                {showModeratorBoard && (\n                                    <li className=\"nav-item\">\n                                    <Link to=\"/mod\" className=\"nav-link\">\n                                        Moderator Board\n                                    </Link>\n                                </li>\n                                )}\n\n                                {currentUser && (\n                                <li className=\"nav-item\">\n                                <Link to=\"/product\" className=\"nav-link\">\n                                    Products\n                                </Link>\n                                </li>\n                                \n                                )}\n\n                                {currentUser && (\n                                \n                                \n                                <li className=\"nav-item\">\n                                <Link to=\"/add\" className=\"nav-link\">\n                                    Add\n                                </Link>\n                                </li>\n                                )}\n\n\n                            </div>\n\n                            {currentUser ? \n                            (\n                            <div className=\"navbar-nav pull-right\">\n                                <li className=\"nav-item\">\n                                    <Link to=\"/profile\" className=\"nav-link\">\n                                        {currentUser.username}\n                                    </Link>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <Link to=\"/\" className=\"nav-link\" onClick={this.logOut}>\n                                        Logut\n                                    </Link>\n                                </li>\n\n                            </div>\n                                ) : (\n                                <div className=\"navbar-nav  pull-right\">\n                                <li className=\"nav-item\">\n                                    <Link to=\"/login\" className=\"nav-link\">\n                                        Login\n                                    </Link>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <Link to=\"/register\" className=\"nav-link\">\n                                        Sign Up\n                                    </Link>\n                                </li>\n\n                            </div>\n                                ) \n                            }\n                        </nav>\n\n                        <div className=\"container mt-3\">\n                            <Switch>\n                                <Route exact path={[\"/\",\"/home\"]} component={Home}/>\n                                <Route exact path=\"/hook\" component={Hooks}/>\n                                <Route exact path=\"/upload\" component={FileUpload}/>\n                                <Route exact path=\"/login\" component={Login}/>\n                                <Route exact path=\"/register\" component={Register}/>\n                                <Route exact path=\"/profile\" component={Profile}/>\n                                <Route exact path=\"/mod\" component={BoardModerator}/>\n                                <Route exact path=\"/admin\" component={BoardAdmin}/>\n                                <Route exact path= \"/product\" component={ProductList} />\n                                <Route exact path=\"/add\" component={AddProduct} />\n                                <Route path=\"/product/:id\" component={Product} />\n                            </Switch>\n                        </div>\n\n                    </div>\n              \n               \n            </Router>\n        );\n\n    }\n\n}\n\nexport default GlobalProvider(App);\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n// import { createStore } from \"redux\";\n// import { Provider } from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import  rootReducer from \"./reducers/index\";\n\n//store\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  // <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}