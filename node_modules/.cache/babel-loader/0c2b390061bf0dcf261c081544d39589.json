{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\dhior\\\\iStar4\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\dhior\\\\iStar4\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import axios from'axios';import authHeader from'./auth-header';var API_URL='https://esport-station-71297.herokuapp.com/api';var ProductDataService=/*#__PURE__*/function(){function ProductDataService(){_classCallCheck(this,ProductDataService);}_createClass(ProductDataService,[{key:\"getAll\",value:function getAll(){return axios.get(API_URL+\"/product\",{headers:authHeader()});}},{key:\"getPublished\",value:function getPublished(){return axios.get(API_URL+\"/product/published\");}},{key:\"get\",value:function get(id){return axios.get(\"\".concat(API_URL,\"/product/\").concat(id),{headers:authHeader()});}},{key:\"getUser\",value:function getUser(id){return axios.get(\"\".concat(API_URL,\"/product/user/\").concat(id),{headers:authHeader()});}},{key:\"create\",value:function create(data){//  console.log(axios.post(API_URL+\"/product\",data ,{headers : authHeader()}));\nreturn axios.post(\"\".concat(API_URL,\"/product\"),data,{headers:authHeader()});}},{key:\"update\",value:function update(id,data){return axios.put(\"\".concat(API_URL,\"/product/\").concat(id),data,{headers:authHeader()});}},{key:\"delete\",value:function _delete(id){//console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\nreturn axios.delete(\"\".concat(API_URL,\"/product/\").concat(id),{headers:authHeader()});}},{key:\"deleteUser\",value:function deleteUser(id){//console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\nreturn axios.delete(\"\".concat(API_URL,\"/product/user/\").concat(id),{headers:authHeader()});}},{key:\"deleteAll\",value:function deleteAll(){return axios.delete(\"\".concat(API_URL,\"/product\"),{headers:authHeader()});}},{key:\"findByTitle\",value:function findByTitle(title){return axios.get(\"\".concat(API_URL,\"/product?title=\").concat(title),{headers:authHeader()});}}]);return ProductDataService;}();export default new ProductDataService();","map":{"version":3,"sources":["C:/Users/dhior/iStar4/React/src/services/product.service.js"],"names":["axios","authHeader","API_URL","ProductDataService","get","headers","id","data","post","put","delete","title"],"mappings":"oTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,gDAAhB,C,GAEMC,CAAAA,kB,uKAEM,CACJ,MAAOH,CAAAA,KAAK,CAACI,GAAN,CAAUF,OAAO,CAAC,UAAlB,CAA+B,CAACG,OAAO,CAAGJ,UAAU,EAArB,CAA/B,CAAP,CACH,C,mDAEa,CACV,MAAOD,CAAAA,KAAK,CAACI,GAAN,CAAUF,OAAO,CAAC,oBAAlB,CAAP,CACH,C,gCAEGI,E,CAAG,CACH,MAAON,CAAAA,KAAK,CAACI,GAAN,WAAaF,OAAb,qBAAgCI,EAAhC,EAAsC,CAACD,OAAO,CAAGJ,UAAU,EAArB,CAAtC,CAAP,CACH,C,wCAEOK,E,CAAG,CACP,MAAON,CAAAA,KAAK,CAACI,GAAN,WAAaF,OAAb,0BAAqCI,EAArC,EAA2C,CAACD,OAAO,CAAGJ,UAAU,EAArB,CAA3C,CAAP,CACH,C,sCAEMM,I,CAAK,CACV;AACE,MAAOP,CAAAA,KAAK,CAACQ,IAAN,WAAcN,OAAd,aAAgCK,IAAhC,CAAsC,CAACF,OAAO,CAAGJ,UAAU,EAArB,CAAtC,CAAP,CACH,C,sCAEMK,E,CAAIC,I,CAAK,CACZ,MAAOP,CAAAA,KAAK,CAACS,GAAN,WAAaP,OAAb,qBAAgCI,EAAhC,EAAsCC,IAAtC,CAA4C,CAACF,OAAO,CAAGJ,UAAU,EAArB,CAA5C,CAAP,CACH,C,uCAEMK,E,CAAI,CACP;AACA,MAAON,CAAAA,KAAK,CAACU,MAAN,WAAgBR,OAAhB,qBAAmCI,EAAnC,EAAyC,CAACD,OAAO,CAAGJ,UAAU,EAArB,CAAzC,CAAP,CACH,C,8CAEUK,E,CAAI,CACX;AACA,MAAON,CAAAA,KAAK,CAACU,MAAN,WAAgBR,OAAhB,0BAAwCI,EAAxC,EAA8C,CAACD,OAAO,CAAGJ,UAAU,EAArB,CAA9C,CAAP,CACH,C,6CAEW,CACR,MAAOD,CAAAA,KAAK,CAACU,MAAN,WAAgBR,OAAhB,aAAmC,CAACG,OAAO,CAAGJ,UAAU,EAArB,CAAnC,CAAP,CACH,C,gDAEWU,K,CAAO,CACf,MAAOX,CAAAA,KAAK,CAACI,GAAN,WAAaF,OAAb,2BAAsCS,KAAtC,EAA+C,CAACN,OAAO,CAAGJ,UAAU,EAArB,CAA/C,CAAP,CACH,C,kCAGL,cAAe,IAAIE,CAAAA,kBAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://esport-station-71297.herokuapp.com/api';\n\nclass ProductDataService {\n\n    getAll(){\n        return axios.get(API_URL+\"/product\" , {headers : authHeader()});\n    }\n\n    getPublished(){\n        return axios.get(API_URL+\"/product/published\" );\n    }\n\n    get(id){\n        return axios.get(`${API_URL}/product/${id}`, {headers : authHeader()});\n    }\n\n    getUser(id){\n        return axios.get(`${API_URL}/product/user/${id}`, {headers : authHeader()});\n    }\n\n    create(data){\n      //  console.log(axios.post(API_URL+\"/product\",data ,{headers : authHeader()}));\n        return axios.post(`${API_URL}/product`,data ,{headers : authHeader()});\n    }\n\n    update(id, data){\n        return axios.put(`${API_URL}/product/${id}`, data, {headers : authHeader()});\n    }\n\n    delete(id) {\n        //console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\n        return axios.delete(`${API_URL}/product/${id}`, {headers : authHeader()});\n    }\n\n    deleteUser(id) {\n        //console.log(axios.delete(`${API_URL}/product/${id}`), {headers : authHeader()});\n        return axios.delete(`${API_URL}/product/user/${id}`, {headers : authHeader()});\n    }\n    \n    deleteAll() {\n        return axios.delete(`${API_URL}/product`, {headers : authHeader()});\n    }\n    \n    findByTitle(title) {\n        return axios.get(`${API_URL}/product?title=${title}`, {headers : authHeader()});\n    }\n}\n\nexport default new ProductDataService;"]},"metadata":{},"sourceType":"module"}