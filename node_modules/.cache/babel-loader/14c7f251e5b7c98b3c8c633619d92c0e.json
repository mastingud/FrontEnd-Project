{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\dhior\\\\iStar4\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\dhior\\\\iStar4\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\dhior\\\\iStar4\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Component,useState}from\"react\";import ProductDataService from\"../services/product.service\";import AuthService from\"../services/auth.service\";// export default class AddProduct extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.saveProduct = this.saveProduct.bind(this);\n//     this.newProduct = this.newProduct.bind(this);\n//     this.state = {\n//       id: null,\n//       title: \"\",\n//       description: \"\", \n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     };\n//   }\n//   onChangeTitle(e) {\n//     this.setState({\n//       title: e.target.value\n//     });\n//   }\n//   onChangeDescription(e) {\n//     this.setState({\n//       description: e.target.value\n//     });\n//   }\n//   saveProduct() {\n//     var data = {\n//       title: this.state.title,\n//       description: this.state.description,\n//       userId : this.state.userId\n//     };\n//     ProductDataService.create(data)\n//       .then(response => {\n//         this.setState({\n//           id: response.data.id,\n//           title: response.data.title,\n//           description: response.data.description,\n//           published: response.data.published,\n//           userId: response.data.userId,\n//           submitted: true\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   newProduct() {\n//     this.setState({\n//       id: null,\n//       title: \"\",\n//       description: \"\",\n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"submit-form\">\n//         {this.state.submitted ? (\n//           <div>\n//             <h4>You submitted successfully!</h4>\n//             <button className=\"btn btn-success\" onClick={this.newProduct}>\n//               Add\n//             </button>\n//           </div>\n//         ) : (\n//           <div>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"title\">Title</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"title\"\n//                 required\n//                 value={this.state.title}\n//                 onChange={this.onChangeTitle}\n//                 name=\"title\"\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"description\">Description</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"description\"\n//                 required\n//                 value={this.state.description}\n//                 onChange={this.onChangeDescription}\n//                 name=\"description\"\n//               />\n//             </div>\n//             <button onClick={this.saveProduct} className=\"btn btn-success\">\n//               Submit\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\nvar AddProduct=function AddProduct(){var initialProductState={id:null,title:\"\",description:\"\",brand:\"\",published:false,userId:AuthService.getCurrentUser().id};var _useState=useState(initialProductState),_useState2=_slicedToArray(_useState,2),product=_useState2[0],setProduct=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitterd=_useState4[1];var handleInputChange=function handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setProduct(_objectSpread(_objectSpread({},product),{},_defineProperty({},name,value)));};var saveProduct=function saveProduct(){var data={title:product.title,description:product.description,brand:product.brand,userId:AuthService.getCurrentUser().id};ProductDataService.create(data).then(function(response){setProduct({id:response.data.id,title:response.data.title,description:response.data.description,brand:response.data.brand,published:response.data.published});setSubmitterd(true);console.log(response.data);}).catch(function(e){console.log(e);});};var newProduct=function newProduct(){setProduct(initialProductState);setSubmitterd(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"submit-form\"},submitted?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"You submitted successfully!\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-success\",onClick:newProduct},\"Add\")):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"Merk\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"title\",required:true,value:product.title,onChange:handleInputChange,name:\"title\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"description\"},\"Description\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"description\",required:true,value:product.description,onChange:handleInputChange,name:\"description\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"brand\"},\"Brand\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"brand\",required:true,value:product.brand,onChange:handleInputChange,name:\"brand\"})),/*#__PURE__*/React.createElement(\"button\",{onClick:saveProduct,className:\"btn btn-success\"},\"Submit\")));};export default AddProduct;","map":{"version":3,"sources":["C:/Users/dhior/iStar4/React/src/components/add-product.component.js"],"names":["React","Component","useState","ProductDataService","AuthService","AddProduct","initialProductState","id","title","description","brand","published","userId","getCurrentUser","product","setProduct","submitted","setSubmitterd","handleInputChange","event","target","name","value","saveProduct","data","create","then","response","console","log","catch","e","newProduct"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport ProductDataService from \"../services/product.service\";\nimport AuthService from \"../services/auth.service\";\n\n\n// export default class AddProduct extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.saveProduct = this.saveProduct.bind(this);\n//     this.newProduct = this.newProduct.bind(this);\n\n//     this.state = {\n//       id: null,\n//       title: \"\",\n//       description: \"\", \n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     };\n//   }\n\n//   onChangeTitle(e) {\n//     this.setState({\n//       title: e.target.value\n//     });\n//   }\n\n//   onChangeDescription(e) {\n//     this.setState({\n//       description: e.target.value\n//     });\n//   }\n\n//   saveProduct() {\n//     var data = {\n//       title: this.state.title,\n//       description: this.state.description,\n//       userId : this.state.userId\n//     };\n\n//     ProductDataService.create(data)\n//       .then(response => {\n//         this.setState({\n//           id: response.data.id,\n//           title: response.data.title,\n//           description: response.data.description,\n//           published: response.data.published,\n//           userId: response.data.userId,\n//           submitted: true\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   newProduct() {\n//     this.setState({\n//       id: null,\n//       title: \"\",\n//       description: \"\",\n//       published: false,\n//       userId : AuthService.getCurrentUser().id,\n//       submitted: false\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"submit-form\">\n//         {this.state.submitted ? (\n//           <div>\n//             <h4>You submitted successfully!</h4>\n//             <button className=\"btn btn-success\" onClick={this.newProduct}>\n//               Add\n//             </button>\n//           </div>\n//         ) : (\n//           <div>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"title\">Title</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"title\"\n//                 required\n//                 value={this.state.title}\n//                 onChange={this.onChangeTitle}\n//                 name=\"title\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"description\">Description</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"description\"\n//                 required\n//                 value={this.state.description}\n//                 onChange={this.onChangeDescription}\n//                 name=\"description\"\n//               />\n//             </div>\n\n//             <button onClick={this.saveProduct} className=\"btn btn-success\">\n//               Submit\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n\n// }\n\n\nconst AddProduct = () => {\n\n  const initialProductState = {\n    id: null,\n    title: \"\",\n    description: \"\", \n    brand: \"\",\n    published: false,\n    userId : AuthService.getCurrentUser().id,\n\n  };\n\n  const [product , setProduct]  = useState(initialProductState);\n  const [submitted , setSubmitterd] = useState(false);\n\n  const handleInputChange = event => {\n      const {name , value} = event.target;\n      setProduct({...product, [name] :  value});\n  };\n\n  const saveProduct = () => {\n    var data = {\n      title : product.title,\n      description : product.description,\n      brand : product.brand,\n      userId : AuthService.getCurrentUser().id,\n    };\n\n    ProductDataService.create(data).then(\n      response => {\n        setProduct({\n          id : response.data.id,\n          title : response.data.title,\n          description : response.data.description,\n          brand : response.data.brand,\n          published : response.data.published\n\n        });\n\n        setSubmitterd(true);\n        console.log(response.data);\n      }).catch( e => {\n        console.log(e);\n      });\n  };\n\n  const newProduct = () => {\n    setProduct(initialProductState);\n    setSubmitterd(false);\n\n  };\n\n  return(\n    <div className=\"submit-form\">\n    {submitted ? (\n      <div>\n        <h4>You submitted successfully!</h4>\n        <button className=\"btn btn-success\" onClick={newProduct}>\n          Add\n        </button>\n      </div>\n    ) : (\n      <div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Merk</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={product.title}\n            onChange={handleInputChange}\n            name=\"title\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            required\n            value={product.description}\n            onChange={handleInputChange}\n            name=\"description\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"brand\">Brand</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"brand\"\n            required\n            value={product.brand}\n            onChange={handleInputChange}\n            name=\"brand\"\n          />\n        </div>\n\n        <button onClick={saveProduct} className=\"btn btn-success\">\n          Submit\n        </button>\n      </div>\n    )}\n  </div>\n  );\n};\n\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}