{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhior\\\\iStar3\\\\react hook-auth-jwt\\\\src\\\\components\\\\article.component.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport ProductDataService from \"../services/article.service\"; // export default class Product extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.getProduct = this.getProduct.bind(this);\n//     this.updatePublished = this.updatePublished.bind(this);\n//     this.updateProduct = this.updateProduct.bind(this);\n//     this.deleteProduct = this.deleteProduct.bind(this);\n//     this.state = {\n//       currentProduct: {\n//         id: null,\n//         title: \"\",\n//         description: \"\",\n//         published: false\n//       },\n//       message: \"\"\n//     };\n//   }\n//   componentDidMount() {\n//     this.getProduct(this.props.match.params.id);\n//   }\n//   onChangeTitle(e) {\n//     const title = e.target.value;\n//     this.setState(function(prevState) {\n//       return {\n//         currentProduct: {\n//           ...prevState.currentProduct,\n//           title: title\n//         }\n//       };\n//     });\n//   }\n//   onChangeDescription(e) {\n//     const description = e.target.value;\n//     this.setState(prevState => ({\n//       currentProduct: {\n//         ...prevState.currentProduct,\n//         description: description\n//       }\n//     }));\n//   }\n//   getProduct(id) {\n//     console.log(id);\n//     ProductDataService.get(id)\n//       .then(response => {\n//         this.setState({\n//           currentProduct: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   updatePublished(status) {\n//     var data = {\n//       id: this.state.currentProduct.id,\n//       title: this.state.currentProduct.title,\n//       description: this.state.currentProduct.description,\n//       published: status\n//     };\n//     ProductDataService.update(this.state.currentProduct.id, data)\n//       .then(response => {\n//         this.setState(prevState => ({\n//           currentProduct: {\n//             ...prevState.currentProduct,\n//             published: status\n//           }\n//         }));\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   updateProduct() {\n//     ProductDataService.update(\n//       this.state.currentProduct.id,\n//       this.state.currentProduct\n//     )\n//       .then(response => {\n//         console.log(response.data);\n//         this.setState({\n//           message: \"The article was updated successfully!\"\n//         });\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   deleteProduct() {    \n//     ProductDataService.delete(this.state.currentProduct.id).then(response => {\n//         console.log(response);\n//         this.props.history.push('/article')\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   render() {\n//     const { currentProduct } = this.state;\n//     return (\n//       <div>\n//         {currentProduct ? (\n//           <div className=\"edit-form\">\n//             <h4>Product</h4>\n//             <form>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"title\">Title</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"title\"\n//                   value={currentProduct.title}\n//                   onChange={this.onChangeTitle}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"description\">Description</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"description\"\n//                   value={currentProduct.description}\n//                   onChange={this.onChangeDescription}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>\n//                   <strong>Status:</strong>\n//                 </label>\n//                 {currentProduct.published ? \"Published\" : \"Pending\"}\n//               </div>\n//             </form>\n//             {currentProduct.published ? (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(false)}\n//               >\n//                 UnPublish\n//               </button>\n//             ) : (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(true)}\n//               >\n//                 Publish\n//               </button>\n//             )}\n//             <button\n//               className=\"badge badge-danger mr-2\"\n//               onClick={this.deleteProduct}\n//             >\n//               Delete\n//             </button>\n//             <button\n//               type=\"submit\"\n//               className=\"badge badge-success\"\n//               onClick={this.updateProduct}\n//             >\n//               Update\n//             </button>\n//             <p>{this.state.message}</p>\n//           </div>\n//         ) : (\n//           <div>\n//             <br />\n//             <p>Please click on a Product...</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nconst Product = props => {\n  const initialProductState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentProduct, setCurrentArtilce] = useState(initialProductState);\n  const [message, setMessage] = useState(\"\");\n\n  const getProduct = id => {\n    ProductDataService.get(id).then(response => {\n      setCurrentArtilce(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n    ;\n  };\n\n  useEffect(() => {\n    getProduct(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentArtilce({ ...currentProduct,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentProduct.id,\n      title: currentProduct.title,\n      description: currentProduct.description,\n      published: status\n    };\n    ProductDataService.update(currentProduct.id, data).then(response => {\n      setCurrentArtilce({ ...currentProduct,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateProduct = () => {\n    ProductDataService.update(currentProduct.id, currentProduct).then(response => {\n      console.log(response.data);\n      setMessage(\"The article was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteProduct = () => {\n    ProductDataService.delete(currentProduct.id).then(response => {\n      console.log(response.data);\n      props.history.push(\"/article\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 3\n    }\n  }, currentProduct ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    value: currentProduct.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    value: currentProduct.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Status:\")), currentProduct.published ? \"Published\" : \"Pending\")), currentProduct.published ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, \"UnPublish\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, \"Publish\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-danger mr-2\",\n    onClick: deleteProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"badge badge-success\",\n    onClick: updateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }, message)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, \"Please click on a Product...\")));\n};\n\nexport default Product;","map":{"version":3,"sources":["C:/Users/dhior/iStar3/react hook-auth-jwt/src/components/article.component.js"],"names":["React","Component","useEffect","useState","ProductDataService","Product","props","initialProductState","id","title","description","published","currentProduct","setCurrentArtilce","message","setMessage","getProduct","get","then","response","data","console","log","catch","e","match","params","handleInputChange","event","name","value","target","updatePublished","status","update","updateProduct","deleteProduct","delete","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,kBAAP,MAA+B,6BAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACxB,QAAMC,mBAAmB,GAAG;AACzBC,IAAAA,EAAE,EAAI,IADmB;AAEzBC,IAAAA,KAAK,EAAG,EAFiB;AAGzBC,IAAAA,WAAW,EAAG,EAHW;AAIzBC,IAAAA,SAAS,EAAI;AAJY,GAA5B;AAOA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,C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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport ProductDataService from \"../services/article.service\";\n\n// export default class Product extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.getProduct = this.getProduct.bind(this);\n//     this.updatePublished = this.updatePublished.bind(this);\n//     this.updateProduct = this.updateProduct.bind(this);\n//     this.deleteProduct = this.deleteProduct.bind(this);\n\n//     this.state = {\n//       currentProduct: {\n//         id: null,\n//         title: \"\",\n//         description: \"\",\n//         published: false\n//       },\n//       message: \"\"\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.getProduct(this.props.match.params.id);\n//   }\n\n//   onChangeTitle(e) {\n//     const title = e.target.value;\n\n//     this.setState(function(prevState) {\n//       return {\n//         currentProduct: {\n//           ...prevState.currentProduct,\n//           title: title\n//         }\n//       };\n//     });\n//   }\n\n//   onChangeDescription(e) {\n//     const description = e.target.value;\n    \n//     this.setState(prevState => ({\n//       currentProduct: {\n//         ...prevState.currentProduct,\n//         description: description\n//       }\n//     }));\n//   }\n\n//   getProduct(id) {\n//     console.log(id);\n//     ProductDataService.get(id)\n//       .then(response => {\n//         this.setState({\n//           currentProduct: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   updatePublished(status) {\n//     var data = {\n//       id: this.state.currentProduct.id,\n//       title: this.state.currentProduct.title,\n//       description: this.state.currentProduct.description,\n//       published: status\n//     };\n\n//     ProductDataService.update(this.state.currentProduct.id, data)\n//       .then(response => {\n//         this.setState(prevState => ({\n//           currentProduct: {\n//             ...prevState.currentProduct,\n//             published: status\n//           }\n//         }));\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   updateProduct() {\n//     ProductDataService.update(\n//       this.state.currentProduct.id,\n//       this.state.currentProduct\n//     )\n//       .then(response => {\n//         console.log(response.data);\n//         this.setState({\n//           message: \"The article was updated successfully!\"\n//         });\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   deleteProduct() {    \n//     ProductDataService.delete(this.state.currentProduct.id).then(response => {\n//         console.log(response);\n//         this.props.history.push('/article')\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   render() {\n//     const { currentProduct } = this.state;\n\n//     return (\n//       <div>\n//         {currentProduct ? (\n//           <div className=\"edit-form\">\n//             <h4>Product</h4>\n//             <form>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"title\">Title</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"title\"\n//                   value={currentProduct.title}\n//                   onChange={this.onChangeTitle}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"description\">Description</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"description\"\n//                   value={currentProduct.description}\n//                   onChange={this.onChangeDescription}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>\n//                   <strong>Status:</strong>\n//                 </label>\n//                 {currentProduct.published ? \"Published\" : \"Pending\"}\n//               </div>\n//             </form>\n\n//             {currentProduct.published ? (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(false)}\n//               >\n//                 UnPublish\n//               </button>\n//             ) : (\n//               <button\n//                 className=\"badge badge-primary mr-2\"\n//                 onClick={() => this.updatePublished(true)}\n//               >\n//                 Publish\n//               </button>\n//             )}\n\n//             <button\n//               className=\"badge badge-danger mr-2\"\n//               onClick={this.deleteProduct}\n//             >\n//               Delete\n//             </button>\n\n//             <button\n//               type=\"submit\"\n//               className=\"badge badge-success\"\n//               onClick={this.updateProduct}\n//             >\n//               Update\n//             </button>\n//             <p>{this.state.message}</p>\n//           </div>\n//         ) : (\n//           <div>\n//             <br />\n//             <p>Please click on a Product...</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n\nconst Product = props => {\n const initialProductState = {\n    id :  null,\n    title : \"\",\n    description : \"\",\n    published :  false\n } ;\n\n const [currentProduct, setCurrentArtilce] = useState(initialProductState);\n const [message, setMessage] = useState(\"\");\n\n const getProduct = id => {\n  ProductDataService.get(id).then(\n    response => {\n      setCurrentArtilce(response.data);\n      console.log(response.data);\n    }).catch(\n      e => {\n        console.log(e);\n      }\n    ); \n; }\n\n\nuseEffect(()=>{\n    getProduct(props.match.params.id);\n}, [props.match.params.id]);\n\nconst handleInputChange =  event => {\n  const {name , value} =  event.target;\n  setCurrentArtilce({...currentProduct, [name] : value});\n};\n\nconst updatePublished = status => {\n  var data = {\n     id: currentProduct.id,\n      title: currentProduct.title,\n      description: currentProduct.description,\n      published: status\n  };\n\n  ProductDataService.update(currentProduct.id, data)\n  .then(response => {\n    setCurrentArtilce({...currentProduct,published:status});\n    console.log(response.data);\n  })\n  .catch( e => {\n    console.log(e);\n  });\n}\n\nconst updateProduct = () => {\n  ProductDataService.update(currentProduct.id, currentProduct)\n  .then(response => {\n    console.log(response.data);\n    setMessage(\"The article was updated successfully!\");\n  })\n  .catch(e => {\n    console.log(e);\n  });\n};\n\nconst deleteProduct= () => {\n  ProductDataService.delete(currentProduct.id)\n  .then( response => {\n    console.log(response.data);\n    props.history.push(\"/article\");\n  })\n  .catch( e => {\n    console.log(e);\n  });\n};\n\nreturn(\n  <div>\n  {currentProduct ? (\n    <div className=\"edit-form\">\n      <h4>Product</h4>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            value={currentProduct.title}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            value={currentProduct.description}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>\n            <strong>Status:</strong>\n          </label>\n          {currentProduct.published ? \"Published\" : \"Pending\"}\n        </div>\n      </form>\n\n      {currentProduct.published ? (\n        <button\n          className=\"badge badge-primary mr-2\"\n          onClick={() => updatePublished(false)}\n        >\n          UnPublish\n        </button>\n      ) : (\n        <button\n          className=\"badge badge-primary mr-2\"\n          onClick={() => updatePublished(true)}\n        >\n          Publish\n        </button>\n      )}\n\n      <button\n        className=\"badge badge-danger mr-2\"\n        onClick={deleteProduct}\n      >\n        Delete\n      </button>\n\n      <button\n        type=\"submit\"\n        className=\"badge badge-success\"\n        onClick={updateProduct}\n      >\n        Update\n      </button>\n      <p>{message}</p>\n    </div>\n  ) : (\n    <div>\n      <br />\n      <p>Please click on a Product...</p>\n    </div>\n  )}\n</div>\n);\n  }\nexport default Product;"]},"metadata":{},"sourceType":"module"}