{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhior\\\\iStar3\\\\react hook-auth-jwt\\\\src\\\\components\\\\login.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"This field is required !\");\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(() => {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile\",\n      className: \"profile-img-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }\n    }, this.state.loading && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"spa\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \"Login\"))), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 38\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dhior/iStar3/react hook-auth-jwt/src/components/login.component.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","required","value","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","loading","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component  } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This field is required !\n            </div>\n        );\n      \n    }      \n};\n\nexport default class Login extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.handleLogin =this.handleLogin.bind(this);\n        this.onChangeUsername =this.onChangeUsername.bind(this);\n        this.onChangePassword= this.onChangePassword.bind(this);\n        this.state = {\n            username : \"\",\n            password : \"\",\n            loading : false,\n            message : \"\"\n        }\n    }\n\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e){\n        e.preventDefault();\n\n        this.setState({\n            message : \"\",\n            loading : true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.username, this.state.password).then(\n                () => {\n                    this.props.history.push(\"/profile\");\n                    window.location.reload();\n                },\n                error => {\n                    const resMessage = (error.response && error.response.data  && error.response.data.message ) \n                    || error.message || error.toString();\n\n                    this.setState({\n                        loading :false,\n                        message :resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading :false\n            });\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img   src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile\" className=\"profile-img-card\" />\n\n                    <Form \n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c\n                        }}\n                    >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"username\" \n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Input type=\"password\" className=\"form-control\" name=\"password\" \n                             value={this.state.password}\n                             onChange={this.onChangePassword}\n                             validations={[required]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <button className=\"btn btn-primary btn-block\"\n                          disabled={this.state.loading}\n                          >\n                              {this.state.loading && (\n                                  <span className=\"spinner-border spinner-border-sm\"></span>\n                              )}\n\n                                <spa>Login</spa>\n                          </button>\n                        </div>\n                            \n                            {this.state.message && (\n                                 <div className=\"form-group\">\n                                     <div className=\"alert alert-danger\" role=\"alert\">\n                                        {this.state.message}\n                                     </div>\n                                 </div>\n                              )}\n\n                        <CheckButton \n                        style={{display : \"none\"}}\n                        ref={c => {\n                            this.checkBtn = c\n                        }}\n                        />\n\n                    </Form>\n\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}