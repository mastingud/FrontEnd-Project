{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhior\\\\iStar3\\\\react hook-auth-jwt\\\\src\\\\components\\\\register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"This field is required !\");\n  }\n};\n\nconst vemail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"This is not valid email !\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"This username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"This password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(this.state.username, this.state.email, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile\",\n      className: \"profile-img-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required, vusername],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      validations: [required, vemail],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required, vpassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }\n    }, \"Sign Up\")), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 38\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dhior/iStar3/react hook-auth-jwt/src/components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","AuthService","required","value","vemail","vusername","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangePassword","onChangeEmail","state","username","password","email","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component  } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail}  from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This field is required !\n            </div>\n        );\n      \n    }      \n};\n\nconst vemail = value => {\n    if (!isEmail(value)) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This is not valid email !\n            </div>\n        );\n      \n    }      \n};\n\nconst vusername = value => {\n    if (value.length <3 || value.length >20 ) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This username must be between 3 and 20 characters.\n            </div>\n        );\n      \n    }      \n};\n\nconst vpassword = value => {\n    if (value.length <6 || value.length >40 ) {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n            This password must be between 6 and 40 characters.\n            </div>\n        );\n      \n    }      \n};\n\nexport default class Register extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.handleRegister =this.handleRegister.bind(this);\n        this.onChangeUsername =this.onChangeUsername.bind(this);\n        this.onChangePassword= this.onChangePassword.bind(this);\n        this.onChangeEmail= this.onChangeEmail.bind(this);\n        \n        this.state = {\n            username : \"\",\n            password : \"\",\n            email : \"\",\n            successful : false,\n            message : \"\"\n        }\n    }\n\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e){\n        e.preventDefault();\n\n        this.setState({\n            message : \"\",\n            successful : true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(this.state.username,this.state.email, this.state.password)\n            .then(\n                response => {\n                   this.setState({\n                       message : response.data.message,\n                       successful : true\n                   });\n                   \n                },\n                error => {\n                    const resMessage = (error.response && error.response.data \n                        && error.response.data.message ) || error.message || error.toString();\n\n                    this.setState({\n                        successful :false,\n                        message :resMessage\n                    });\n                }\n            );\n      \n        }\n    }\n\n    render(){\n        return(\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img   src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile\" className=\"profile-img-card\" />\n\n                    <Form \n                        onSubmit={this.handleRegister}\n                        ref={c => {\n                            this.form = c\n                        }} >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"username\" \n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required ,vusername]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Input type=\"text\" className=\"form-control\" name=\"email\" \n                            value={this.state.email}\n                            onChange={this.onChangeEmail}\n                            validations={[required ,vemail]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Input type=\"password\" className=\"form-control\" name=\"password\" \n                             value={this.state.password}\n                             onChange={this.onChangePassword}\n                             validations={[required,vpassword]} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <button className=\"btn btn-primary btn-block\">\n                              Sign Up\n                          </button>\n                        </div>\n                            \n                            {this.state.message && (\n                                 <div className=\"form-group\">\n                                     <div className={\n                                         this.state.successful\n                                         ?\"alert alert-success\"\n                                         :\"alert alert-danger\"\n                                     } role=\"alert\">\n                                        {this.state.message}\n                                     </div>\n                                 </div>\n                              )}\n\n                        <CheckButton \n                        style={{display : \"none\"}}\n                        ref={c => {\n                            this.checkBtn = c\n                        }}\n                        />\n\n                    </Form>\n\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}